# [PackageDev] target_format: plist, ext: tmLanguage
name: Specman
scopeName: source.specman
fileTypes: [e]
uuid: dbc9dd50-bd4c-4fdb-9a8f-12524d8898a1

patterns:
- name: keyword.statement.specman
  match: var instance on compute start event expect check that routine specman is
    also first only with like list of all radix hex dec bin ignore illegal traceable
    untraceable cover using count_only trace_only at_least transition item ranges
    cross text call task within

- name: keyword.method.specman
  match: initialize non_terminal testgroup delayed exit finish out append print outf
    appendf post_generate pre_generate setup_test finalize_test extract_test init
    run copy as_a set_config dut_error add clear lock quit lock unlock release swap
    quit to_string value stop_run crc_8 crc_32 crc_32_flip get_config add0 all_indices
    and_all apply average count delete exists first_index get_indices has insert is_a_permutation
    is_empty key key_exists key_index last last_index max max_index max_value min
    min_index min_value or_all pop pop0 push push0 product resize reverse sort split
    sum top top0 unique clear is_all_iterations get_enclosing_unit hdl_path exec deep_compare
    deep_compare_physical pack unpack warning error fatal

- name: keyword.repeat.specman
  match: until repeat while for from to step each do break continue before next sequence
    always -kind network index it me in new return result select

- name: keyword.packing.specman
  match: packing low high

- name: keyword.type.specman
  match: locker address body code vec chars integer real bool int long uint byte bits
    bit time string byte_array external_pointer

- name: keyword.boolean.specman
  match: TRUE FALSE

- name: keyword.precondit.specman
  match: null

- name: keyword.conditional.specman
  match: choose matches if then else when try

- name: keyword.label.specman
  match: case casex casez default

- name: keyword.logical.specman
  match: and or not xor

- name: keyword.temporal.specman
  match: cycle sample events forever wait  change  negedge rise fall delay sync sim
    true detach eventually emit

- name: keyword.constant.specman
  match: MAX_INT MIN_INT NULL UNDEF

- name: keyword.define.specman
  match: define as computed type extend verilog vhdl variable global sys

- name: keyword.structure.specman
  match: struct unit

- name: keyword.include.specman
  match: import

- name: keyword.constraint.specman
  match: gen keep keeping soft before

- name: keyword.special.specman
  match: untyped symtab ECHO DOECHO

- name: keyword.file.specman
  match: files load module ntv source_ref script read write

- name: keyword.fsm.specman
  match: initial idle others posedge clock cycles
